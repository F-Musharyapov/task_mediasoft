plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2' // Добавляем Allure плагин
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

dependencies {
    // JUnit аннотации
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // Database
    implementation 'org.postgresql:postgresql:42.7.3'

    // Rest-assured
    testImplementation 'io.rest-assured:rest-assured:5.5.5'
    testImplementation 'io.rest-assured:json-schema-validator:5.5.5'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.17.3' // Для интеграции RestAssured с Allure

    //Lombok аннотации
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    //Allure аннотации
    testImplementation 'io.qameta.allure:allure-junit5:2.17.3'
    testImplementation 'io.qameta.allure:allure-assertj:2.17.3' // Для интеграции AssertJ с Allure
    testImplementation 'io.qameta.allure:allure-java-commons:2.17.3'

    //AssertJ аннотации
    testImplementation 'org.assertj:assertj-core:3.22.0'

    //Faker аннотации
    implementation 'com.github.javafaker:javafaker:1.0.2'

    //Owner аннотации
    implementation 'org.aeonbits.owner:owner:1.0.12'

    implementation 'org.slf4j:slf4j-simple:1.7.30'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

// Конфигурация Allure
allure {
    version = '2.17.3'
    useJUnit5 {
        version = '2.17.3'
    }

    // Дополнительные настройки
    report {
        version.set('2.17.3')
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set('2.17.3')
            }
        }
    }
}

test {
    useJUnitPlatform()

    //Запуск тестов последовательно
    maxParallelForks = 1
    forkEvery = 1

    //Определение порядка тестов
    dependsOn 'cleanTest'
    mustRunAfter 'testClasses'

    // Настройки для Allure
    systemProperties = [
            'junit.jupiter.execution.parallel.enabled': 'false',
            'allure.results.directory': 'build/allure-results'
    ]

    // Сбор отчетов Allure при падении тестов
    ignoreFailures = true

    // Логирование для отладки
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showExceptions = true
        exceptionFormat = "full"
        showCauses = true
        showStackTraces = true
    }
}

// Задача для очистки Allure результатов
task cleanAllure(type: Delete) {
    delete 'build/allure-results'
    delete 'build/allure-report'
}

// Связка очистки со стандартной clean задачей
clean.dependsOn cleanAllure